// ОБЛАСТИ ВИДИМОСТИ

// ОБЩИЕ ПОНЯТИЯ
// ЖИЗНЕННЫЙ ЦИКЛ ПЕРЕМЕННЫХ
// ТИПЫ ОБЛАСТЕЙ ВИДИМОСТИ
// ПРАВИЛА РАБОТЫ С ПЕРЕМЕННЫМИ
// СТРОГИЙ РЕЖИМ В JS

// ОБЩИЕ ПОНЯТИЯ
// Область видимости определяет границы действия переменной

// Глобальные переменные - объявлены в глобальной области видимости (window, global, console ...)
// Локальные переменные - объявлены в локальных областях видимости

const x = 5;

function myFunction() {
  function innerFn() {
    console.log(x);
  }
  innerFn();
}

myFunction();

// Цепочка областей видимости: х? {innerFn scope} -> {myFn scope} -> {Global scope} ---> нашли х в глобальной области видимости

// Вызов innerFn() в глобальной области видимости вызовет ошибку, так как эта ф-ция объявлена в локальной области видимости ф-ции myFunction()

console.log("--------------------------------------");

// ЖИЗНЕННЫЙ ЦИКЛ ПЕРЕМЕННЫХ
let j; // 1.а. Обяъвление "j" в глобальной области видимости ( = undefined)
let g; // 1.б. Обяъвление "g" в глобальной области видимости ( = undefined)

function myF() {
  let g; // 3.б. Объявление "g" в зоне видимости ф-ции
  j = true; // 3.а. Объявлена ли "j" в зоне видимости ф-ции? НЕТ. Объявлена ли "j" во внешней области видимости? ДА. Присваивание значение true глобальной переменной "j"
  g = 10; // 4.б. Объявлена ли "g" в зоне видимости ф-ции? ДА. Присвоение этой переменной "g" значения 10
  console.log(j); // true
  console.log(g); // 10 - 5.б. "g" имеет значение 10 в области видимости ф-ции
}

myF(); // 2.а. и 2.б. Вызов myF

console.log(j); // true - 4.а. "j" имеет значение true
console.log(g); // undefined - 6.б. "g" всё так же имеет значение undefined в глобальной области

console.log("--------------------------------------");

// ТИПЫ ОБЛАСТЕЙ ВИДИМОСТИ
// 1. Глобальная область видимости
// 2. Область видимости ф-ции - создаются каждый раз, когда мы вызываем ту или иную ф-цию, то есть для каждой ф-ции, для каждого вызова ф-ции такая область будет своя
// 3. Область видимости блока - переменные, объявленные с помощью let или const внутри блока имеют область видимости, ограниченную этим блоком
// *: Блок в JS - это любой код, который находится между фигурными скобками
// *: Необъявленные переменные (без let или const) будут автоматически объявлены в глобальной области видимости, то есть доступ к таким переменным будет без ошибки в любой области видимости и это плохо

// ПРАВИЛА РАБОТЫ С ПЕРЕМЕННЫМИ
// 1. Все переменные объявлять перед их использованием
// 2. Стараться использовать const везде, где это возможно
// 3. Внутри функций не изменять переменные с внешних областей видимости

// СТРОГИЙ РЕЖИМ В JS
// Строгий режим - это инструкция для JS анализировать наш код более пристально. Запрещает использование необъявленных переменных.
// 1 вариант: строка 'use strict' - должна быть первой в глобальной области видимости или в области видимости ф-ции
// 2 вариант - указать в скрипте type='module'

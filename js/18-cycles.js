// ЦИКЛЫ

// ЦИКЛЫ
// ЦИКЛ for
// ДЛЯ ПЕРЕБОРА МАССИВОВ НЕ НУЖЕН for
// ЦИКЛ while
// ЦИКЛ do while
// ЦИКЛ for in
// МЕТОДЫ keys И values ДЛЯ ОБЪЕКТОВ
// ЦИКЛ for in ДЛЯ МАССИВОВ
// ЦИКЛ for of

// ЦИКЛЫ
// Циклы используются для удобства перебора свойств объекта, элементов массива и т.д., то есть при повторяющихся действиях
// Все циклы - это инструкции, не выражения

// ЦИКЛ for
// for (Начальная инструкция; Условие; Итерационное действие) {
// Блок кода, выполняемый на каждой итерации
// }

for (let i = 0; i < 5; i++) {
  console.log(i);
}

// ДЛЯ ПЕРЕБОРА МАССИВОВ НЕ НУЖЕН for
// Циклы можно использовать для массивов, но не рекомендуется

// Пример 1
const myArray = ["first", "second", "third"];

for (let i = 0; i < myArray.length; i++) {
  console.log(myArray[i]);
}

// Для перебора массивов лучше использовать функции высшего поряда массивов - "forEach", "map", "reduce"

// Пример 2
// С помощью forEach можно получить доступ и к элементу и к индексу. Второй параметр index опционален
myArray.forEach((element, index) => console.log(element, index));

// ЦИКЛ while
// while (Условие) {
// Блок кода, выполняемый на каждой итерации
// }

// Цикл выполняется пока условие правдиво
// Блок инструкций может быть ни разу не выполнен, если условие изначально ложно

let i = 0;

while (i < 5) {
  console.log(i);
  i += 1; // Изменение переменной влияющей на условие
}

// ЦИКЛ do while
// Блок инструкций выполнится как минимум один раз, даже если условие изначально ложно

// do {
// Блок кода, выполняемый на каждой итерации
// } while (Условие)

let j = 0;

do {
  console.log(j);
  j += 1;
} while (j < 5);

// ЦИКЛ for in
// for (key in Object) {
// Действия с каждым свойством объекта
// Значения свойства - Object[key]
// }

const myObject = {
  x: 10,
  y: true,
  c: "abc",
};

for (const key in myObject) {
  console.log(key, myObject[key]);
}

// МЕТОДЫ keys И values ДЛЯ ОБЪЕКТОВ
// Object.keys() - получение всех КЛЮЧЕЙ объекта в виде массива (keys() - это метод переменной Object)

Object.keys(myObject).forEach((key) => {
  console.log(key, myObject[key]);
});

// Object.values() - получение всех ЗНАЧЕНИЙ свойств объекта в виде массива (values() - это метод переменной Object)

Object.values(myObject).forEach((val) => {
  console.log(val);
});

// ЦИКЛ for in ДЛЯ МАССИВОВ
const newArray = [true, 10, "abc", null];

for (const key in newArray) {
  console.log(newArray[key]);
}

// То есть for in можно использовать не только для объектов, но и для массивов. Однако так делать НЕ рекомендуется. Для массивов намного лучше использовать их родной метод forEach

// ЦИКЛ for of
// Появился в ES6
// for (Element of Iterable) {
// Действия с определенным элементом
// }

// Iterable - любое значение, либо переменная, которая содержит значение, по которому можно итерироваться (элементы которого можно перебирать)
// Element - это переменная, которая будет доступна внутри в каждой итерации цикла

// Пример 1 (строка)
const myString = "Hey";

for (const letter of myString) {
  console.log(letter);
}

// Пример 2 (массив)
for (const element of newArray) {
    console.log(element);
}

// for of НЕ ДЛЯ ОБЪЕКТОВ, так как объект - это неитерируемый элемент в JS (TypeError: object is not iterable)